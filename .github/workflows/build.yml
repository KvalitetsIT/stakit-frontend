name: CICD

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
# Set docker image names.
    - name: Setup env variables
      run: |
        echo "DOCKER_SERVICE=kvalitetsit/stakit-frontend" >> $GITHUB_ENV
        echo "DOCKER_DOCUMENTATION=kvalitetsit/stakit-frontend-documentation" >> $GITHUB_ENV

# Checkout source code
    - uses: actions/checkout@v4

# if below step is skipped this build is a tag build. Can be used for skipping other steps.
    - name: Is Tag Build
      id: tag
      if:  ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

# Login to docker hub using secrets in GitHub.
    - name: Login to docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and test
      run: ./build/build.sh ${{ env.DOCKER_SERVICE }}:latest

      # Push nonroot image
    - name: nonroot-image) Tag service dev docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:dev
    - name: nonroot-image) Push service dev docker image
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:dev
    - name: nonroot-image) Tag service git id docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ github.sha }}
    - name: nonroot-image) Push service git id docker image.
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ github.sha }}
    - name: nonroot-image) Push latest service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:latest
    - name: nonroot-image) Tag version service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}
    - name: nonroot-image) Push version service docker image.
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}

      # Push root image
    - name: root-image) Tag service dev-root docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest-root ${{ env.DOCKER_SERVICE }}:dev-root
    - name: root-image) Push service dev docker image
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:dev-root
    - name: root-image) Tag service git id docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest-root ${{ env.DOCKER_SERVICE }}:${{ github.sha }}-root
    - name: root-image) Push service git id docker image.
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ github.sha }}-root
    - name: root-image) Push latest service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:latest-root
    - name: root-image) Tag version service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest-root ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}-root
    - name: root-image) Push version service docker image.
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}-root

    
    

    


